---
format_version: '4'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- push_branch: master
  workflow: primary
- pull_request_source_branch: "*"
  workflow: primary
workflows:
  deploy:
    steps:
    - activate-ssh-key@3.1.1:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.9: {}
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: Write configuration plists
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            PlistBuddy=/usr/libexec/PlistBuddy

            GSIPlist=$BITRISE_SOURCE_DIR/Kiretan0/GoogleService-Info.plist
            $PlistBuddy $GSIPlist -c "clear dict"
            $PlistBuddy $GSIPlist -c "add AD_UNIT_ID_FOR_BANNER_TEST string $GOOGLE_SERVICE_AD_UNIT_ID_FOR_BANNER_TEST"
            $PlistBuddy $GSIPlist -c "add AD_UNIT_ID_FOR_INTERSTITIAL_TEST string $GOOGLE_SERVICE_AD_UNIT_ID_FOR_INTERSTITIAL_TEST"
            $PlistBuddy $GSIPlist -c "add CLIENT_ID string $GOOGLE_SERVICE_CLIENT_ID"
            $PlistBuddy $GSIPlist -c "add REVERSED_CLIENT_ID string $GOOGLE_SERVICE_REVERSED_CLIENT_ID"
            $PlistBuddy $GSIPlist -c "add API_KEY string $GOOGLE_SERVICE_API_KEY"
            $PlistBuddy $GSIPlist -c "add GCM_SENDER_ID string $GOOGLE_SERVICE_GCM_SENDER_ID"
            $PlistBuddy $GSIPlist -c "add PLIST_VERSION string $GOOGLE_SERVICE_PLIST_VERSION"
            $PlistBuddy $GSIPlist -c "add BUNDLE_ID string $GOOGLE_SERVICE_BUNDLE_ID"
            $PlistBuddy $GSIPlist -c "add PROJECT_ID string $GOOGLE_SERVICE_PROJECT_ID"
            $PlistBuddy $GSIPlist -c "add STORAGE_BUCKET string $GOOGLE_SERVICE_STORAGE_BUCKET"
            $PlistBuddy $GSIPlist -c "add IS_ADS_ENABLED bool $GOOGLE_SERVICE_IS_ADS_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_ANALYTICS_ENABLED bool $GOOGLE_SERVICE_IS_ANALYTICS_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_APPINVITE_ENABLED bool $GOOGLE_SERVICE_IS_APPINVITE_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_GCM_ENABLED bool $GOOGLE_SERVICE_IS_GCM_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_SIGNIN_ENABLED bool $GOOGLE_SERVICE_IS_SIGNIN_ENABLED"
            $PlistBuddy $GSIPlist -c "add GOOGLE_APP_ID string $GOOGLE_SERVICE_GOOGLE_APP_ID"
            $PlistBuddy $GSIPlist -c "add DATABASE_URL string $GOOGLE_SERVICE_DATABASE_URL"

            CFGPlist=$BITRISE_SOURCE_DIR/Kiretan0/Config.plist
            $PlistBuddy $CFGPlist -c "clear dict"
            $PlistBuddy $CFGPlist -c "add teamID string $CONFIG_TEAM_ID_FOR_DEPLOY"

            # or run a script from your repository, like:
            # bash ./path/to/script.sh
            # not just bash, e.g.:
            # ruby ./path/to/script.rb
    - certificate-and-profile-installer@1.9.2: {}
    - cocoapods-install@1.7.2: {}
    - carthage@3.1.3:
        inputs:
        - carthage_options: "--platform ios"
        - carthage_command: bootstrap
    - xcode-archive@2.4.6:
        inputs:
        - project_path: "$BITRISE_PROJECT_PATH"
        - scheme: "$BITRISE_SCHEME"
        - export_method: app-store
    - deploy-to-bitrise-io@1.3.10: {}
    - deploy-to-itunesconnect-deliver@2.13.0:
        inputs:
        - password: "$ITUNES_COMNECT_PASSWORD"
        - bundle_id: com.hironytic.Kiretan0
        - itunescon_user: "$ITUNES_CONNECT_USER"
    - cache-push@2.0.5: {}
    - slack@2.7.2:
        run_if: ".IsCI"
        inputs:
        - channel: "#kiretan"
        - message: "デプロイしました！\U0001F680"
        - message_on_error: "デプロイで問題が発生しています！\U0001F628"
        - webhook_url: "$SLACK_WEBHOOK_URL"
  primary:
    steps:
    - activate-ssh-key@3.1.1:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4.0.9: {}
    - cache-pull@2.0.1: {}
    - script@1.1.5:
        title: Write configuration plists
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # write your script here
            PlistBuddy=/usr/libexec/PlistBuddy

            GSIPlist=$BITRISE_SOURCE_DIR/Kiretan0/GoogleService-Info.plist
            $PlistBuddy $GSIPlist -c "clear dict"
            $PlistBuddy $GSIPlist -c "add AD_UNIT_ID_FOR_BANNER_TEST string $GOOGLE_SERVICE_AD_UNIT_ID_FOR_BANNER_TEST"
            $PlistBuddy $GSIPlist -c "add AD_UNIT_ID_FOR_INTERSTITIAL_TEST string $GOOGLE_SERVICE_AD_UNIT_ID_FOR_INTERSTITIAL_TEST"
            $PlistBuddy $GSIPlist -c "add CLIENT_ID string $GOOGLE_SERVICE_CLIENT_ID"
            $PlistBuddy $GSIPlist -c "add REVERSED_CLIENT_ID string $GOOGLE_SERVICE_REVERSED_CLIENT_ID"
            $PlistBuddy $GSIPlist -c "add API_KEY string $GOOGLE_SERVICE_API_KEY"
            $PlistBuddy $GSIPlist -c "add GCM_SENDER_ID string $GOOGLE_SERVICE_GCM_SENDER_ID"
            $PlistBuddy $GSIPlist -c "add PLIST_VERSION string $GOOGLE_SERVICE_PLIST_VERSION"
            $PlistBuddy $GSIPlist -c "add BUNDLE_ID string $GOOGLE_SERVICE_BUNDLE_ID"
            $PlistBuddy $GSIPlist -c "add PROJECT_ID string $GOOGLE_SERVICE_PROJECT_ID"
            $PlistBuddy $GSIPlist -c "add STORAGE_BUCKET string $GOOGLE_SERVICE_STORAGE_BUCKET"
            $PlistBuddy $GSIPlist -c "add IS_ADS_ENABLED bool $GOOGLE_SERVICE_IS_ADS_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_ANALYTICS_ENABLED bool $GOOGLE_SERVICE_IS_ANALYTICS_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_APPINVITE_ENABLED bool $GOOGLE_SERVICE_IS_APPINVITE_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_GCM_ENABLED bool $GOOGLE_SERVICE_IS_GCM_ENABLED"
            $PlistBuddy $GSIPlist -c "add IS_SIGNIN_ENABLED bool $GOOGLE_SERVICE_IS_SIGNIN_ENABLED"
            $PlistBuddy $GSIPlist -c "add GOOGLE_APP_ID string $GOOGLE_SERVICE_GOOGLE_APP_ID"
            $PlistBuddy $GSIPlist -c "add DATABASE_URL string $GOOGLE_SERVICE_DATABASE_URL"

            CFGPlist=$BITRISE_SOURCE_DIR/Kiretan0/Config.plist
            $PlistBuddy $CFGPlist -c "clear dict"
            $PlistBuddy $CFGPlist -c "add teamID string TEST_TEAM_ID"

            # or run a script from your repository, like:
            # bash ./path/to/script.sh
            # not just bash, e.g.:
            # ruby ./path/to/script.rb
    - certificate-and-profile-installer@1.9.2: {}
    - cocoapods-install@1.7.2: {}
    - carthage@3.1.3:
        inputs:
        - carthage_options: "--platform ios"
        - carthage_command: bootstrap
    - xcode-test@1.18.13:
        inputs:
        - project_path: "$BITRISE_PROJECT_PATH"
        - scheme: "$BITRISE_SCHEME"
    - deploy-to-bitrise-io@1.3.10: {}
    - cache-push@2.0.5: {}
    - slack@2.7.2:
        run_if: ".IsCI"
        inputs:
        - channel: "#kiretan"
        - message: ''
        - message_on_error: ''
        - webhook_url: "$SLACK_WEBHOOK_URL"
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: Kiretan0.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: Kiretan0
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: development
